<div class="hidden"><h1>addDatabase()</h1>
		<p>By default...or as a natural by-product of...the development methodology of this class library, the improved extension of the mysql database became the technology of choice for database integration testing and development. As a result, (and because at the time of this documentation no other database technology had yet been integrated into the C<span class="the_R">R</span>NRSTN Suite ::) the MySQLi extension has been baked into this product and is a core requirement for the successful instantiation of the C<span class="the_R">R</span>NRSTN :: class object.<br />
<br />
There are plans to add native support for other technologies (including MSSQL and the current incarnation of MySQL), but for now and by default, the MySQLi database connection manager is a required class definition regardless of whether or not there is the need to use a database within the running application.<br />
<br />
To that end, if the use of a database and the MySQLi extension is desired, the <a href="../../../classes/crnrstn/adddatabase/" target="_self">addDatabase()</a> method provides a proper and secure interface to said functionality. Similar to the IP address security components, the C<span class="the_R">R</span>NRSTN Suite :: supports the decoupling of database authentication credentials to allow for the enforcement of a division of labour between...for example...developers and database administrators who may be working within strictly regulated development and hosting environments.<br />
<br />
A developer never needs to actually see the database credential file if that is a requirement. A working sample of the decoupled DB auth configuration file is provided with the class library download and can be found within the <i>/config.database.secure/</i> directory.<br />
<br />
For each environment, the C<span class="the_R">R</span>NRSTN Suite :: supports n+1 hosts having n+1 databases with each database giving privileges to n+1 users. N+1 database connection profiles can be setup ahead of time in the configuration file. In more dynamic situations...at application runtime...all db auth parameters can be passed to mysqli_connection_manager-><a href="../../../classes/mysqli_conn_manager/returnconnection/" target="_self">returnConnection()</a> for the immediate and programmatic initialization of a database connection.<br />
<br />
It should be noted that the C<span class="the_R">R</span>NRSTN Suite :: is perfectly capable of supporting advanced and programmatically-dynamic data management techniques including:<br />
<ul><li>functional partioning,</li><li>division of duties,</li><li>sharding and</li><li>splintering.</li></ul></p>
		<p>Version: </p>
		<p>Method Definition: addDatabase($envKey, $host_or_PathToFile, $un=NULL, $pwd=NULL, $db=NULL, $port=NULL)</p>
		<p>Invoking class: crnrstn</p><h2>Technical Specifications:<h2><p>Currently tested on an ubuntu 4.2 server running PHP Version 5.2.6 and Apache 2.2.11</p><p>It is recommended that you upgrade to the latest version of PHP to take advantage of the latest gains in security and processing efficiency.</p><p>The mysqli extension, or as it is sometimes known, the MySQL improved extension, was developed to take advantage of new features found in MySQL systems versions 4.1.3 and newer. The mysqli extension is included with PHP versions 5 and later. Please see php.net for additional information about the MySQLi extension.</p><p>Unless a path to the externally hosted DB auth file is provided in place of $hostname, the NULLABLE parameters which will understandably then be required are $un, $pwd and $db.</p><h2>Parameters:</h2><h3>$db</h3><p>The name of the database. This parameter will be required if a path to the configuration file (which would then have this information) is not provided in place of hostname.</p><h3>$port</h3><p>The port to which the database is listening.</p><h3>$envKey</h3><p>A user-defined custom string identifying a specific hosting environment or server profile. E.g. "LOCALHOST_MY_OLD_MAC_TOWER", "LOCALHOST_PC" or "PROD_01".</p><h3>$host_or_PathToFile</h3><p>The database host name or...alternatively...if there is a decoupling of the database credentials from the C<span class="the_R">R</span>NRSTN Suite :: configuration file, the path to said configuration file can be sent through this parameter.</p><h3>$un</h3><p>The username for the database. This parameter will be required if a path to the configuration file (which would then have this information) is not provided in place of hostname.</p><h3>$pwd</h3><p>The password for the database. This parameter will be required if a path to the configuration file (which would then have this information) is not provided in place of hostname.</p><p>Last upated: 2017-04-11 02:27:21</p></div>