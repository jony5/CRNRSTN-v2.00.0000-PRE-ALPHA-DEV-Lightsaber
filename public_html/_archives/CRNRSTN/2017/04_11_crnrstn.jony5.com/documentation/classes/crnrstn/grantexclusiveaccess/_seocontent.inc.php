<div class="hidden"><h1>grantExclusiveAccess()</h1>
		<p>If an application has security requirements being placed upon users from an authorized IP address perspective, the C<span class="the_R">R</span>NRSTN Suite :: can manage the configuration of said IP address access permissions from a few different angles. In this case, if exclusive access needs to be given to particular users, <a href="../../../classes/crnrstn/grantexclusiveaccess/" target="_self">grantExclusiveAccess()</a> can be used to block ALL IPs access...except for the identified IPs. Conversly, if instead there are particular IPs which need to be blocked, use <a href="../../../classes/crnrstn/denyaccess/" target="_self">denyAccess()</a> to specify the blocked IPs; in this case, all other IPs would be given access to the application. It is not recommended that BOTH <a href="../../../classes/crnrstn/grantexclusiveaccess/" target="_self">grantExclusiveAccess()</a> and <a href="../../../classes/crnrstn/denyaccess/" target="_self">denyAccess()</a> be used as this can create unpredictable behavior...on top of there being logical inefficiencies. <br />
<br />
Using <a href="../../../classes/crnrstn/grantexclusiveaccess/" target="_self">grantExclusiveAccess()</a>, security protocols for IPv4 and/or IPv6 (additional testing needed) addresses can be configured to enable granting of "exclusive" access to the application. All other IPs will be given a <a href="https://en.wikipedia.org/wiki/HTTP_403" target="_blank">403 error</a>. You can customize the HTML that is returned by editing the returnSrvrRespStatus() method of the crnrstn_environmentals :: class object (<a href="../../../classes/environmentals/" target="_self">crnrstn.env.inc.php</a>). These security permissions can be accomplished in the code "in-line" within the C<span class="the_R">R</span>NRSTN Suite :: configuration file, or if access to these settings needs to be controlled in compliance with...say...the strictly regulated roles and responsibilities of a government or industry workplace setting, the IP access permissions can be decoupled from the primary C<span class="the_R">R</span>NRSTN configuration file and placed within a remote file in a restricted directory while having the path/to/the/remote/file.php be provided to the C<span class="the_R">R</span>NRSTN Suite :: through this same method.<br />
<br />
Either way (in-line or path-to-file), IP addresses can be supplied in a number of formats including the use of asterisk/star-dot (*) notations. The sample C<span class="the_R">R</span>NRSTN configuration file comes with an assortment of different configuration parameters to showcase the flexibility of this functionality. However, additional testing needs to be performed on IPv6 address exclusivity, as I did not have access to that protocol during the development of the present release of the C<span class="the_R">R</span>NRSTN Suite :: version 1.0.0.</p>
		<p>Version: </p>
		<p>Method Definition: grantExclusiveAccess($envKey,$IPAddress_Or_PathToFile)</p>
		<p>Invoking class: crnrstn</p><h2>Technical Specifications:<h2><p>It is recommended that you upgrade to the latest version of PHP to take advantage of the latest gains in security and processing efficiency.</p><p>Currently tested on an ubuntu 4.2 server running PHP Version 5.2.6 and Apache 2.2.11</p><p>A working sample of the decoupled IP restrictions configuration file is provided with the class library download and can be found in the <i>/config.ipauthmgr.secure/</i> directory.</p><p>If providing path to file [e.g. grantExclusiveAccess([environment-key], [path-to-ip-auth-config-file])], please note that the C<span class="the_R">R</span>NRSTN Suite :: uses include_once() to access this information.</p><h2>Parameters:</h2><h3>$envKey</h3><p>A user-defined custom string identifying a specific hosting environment or server profile. E.g. "LOCALHOST_MY_OLD_MAC_TOWER", "LOCALHOST_PC" or "PROD_01".</p><h3>$IPAddress_Or_PathToFile</h3><p>The C<span class="the_R">R</span>NRSTN Suite :: will process IP addresses provided in the following formats...e.g., as either an individual value or a comma delimited list:<br />
<ul><li>'127.0.0.1'</li><li>'127.0.0.1, 127.*, 128.0.4.50, 128.0.4.60, 130.50.*, 130.51.10.*'</li><li>'127.*'</li><li>'FE80::210:80FF:FEF3:4605, 130.*,130.51.10.*,FE80::230:80FF:FEF3:4701'</li><li>'FE80::230:80FF:FEF3:4701'</li></ul></p><p>Last upated: 2017-04-11 02:27:21</p></div>