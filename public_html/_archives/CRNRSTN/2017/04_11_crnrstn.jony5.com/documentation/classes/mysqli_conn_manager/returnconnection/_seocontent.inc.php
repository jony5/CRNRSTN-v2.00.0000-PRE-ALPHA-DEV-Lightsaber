<div class="hidden"><h1>returnConnection()</h1>
		<p>With a properly configured database profile in the C<span class="the_R">R</span>NRSTN Suite :: configuration file, the versatility of the <a href="../../../classes/mysqli_conn_manager/" target="_self">mysqli_connection_manager</a> :: class comes into focus. Once a database authentication profile has been configured within the C<span class="the_R">R</span>NRSTN Suite ::, <a href="../../../classes/mysqli_connection_manager/returnconnection/" target="_self">returnConnection()</a> will be able to return a successfully authenticated database connection handle when provided with varying amounts of information/parameters depending upon what the situation requires.<br />
<br />
For example, the application security policies allowance (or lack thereof) for the liberal use of the database specific connectivity information (e.g. username and password) throughout the code base...may demand that a connection be returned through the invocation of an empty <a href="../../../classes/mysqli_conn_manager/returnconnection/" target="_self">returnConnection()</a> method. NO hostname, NO db name, NO username, NO port...and ESPECIALLY NO PASSWORD need be provided.<br />
<br />
Conversely, if one needed to programmatically manage connections to n+1 databases for n+1 users (of different privilege types) on n+1 hosts, it should be noted that the C<span class="the_R">R</span>NRSTN Suite :: is perfectly capable of supporting advanced and programmatically-dynamic data management techniques including functional partioning, division of duties, sharding and splintering.<br />
<br />
Passing ALL db auth parameters to mysqli_connection_manager-><a href="../../../classes/mysqli_conn_manager/returnconnection/" target="_self">returnConnection()</a> in real-time will allow for the immediate programmatic initialization of mysqli database connections. The configuration file need not be modified to represent dynamic database architectures.</p>
		<p>Version: </p>
		<p>Method Definition: returnConnection($host=NULL, $db=NULL, $un=NULL, $port=NULL, $pwd=NULL)</p>
		<p>Invoking class: mysqli_conn_manager</p><h2>Technical Specifications:<h2><p>By passing in 'host', 'database', 'user', 'port' and 'pwd', the C<span class="the_R">R</span>NRSTN Suite :: configuration file need not be coupled to the applications data architecture. Database connections can be made programmatically in real-time.</p><p>When joining an application to more than one (1) database through the C<span class="the_R">R</span>NRSTN Suite ::, ...at a minimum, the <a href="classes/mysqli_connection_manager/returnconnection/" target="_self">returnConnection()</a> method needs to be invoked with 'host' and 'database' to ensure that the correct MySQL database profile is chosen. Otherwise, establishing a connection by passing in only hostname (or less) will result in the first database profile on the specified host always being chosen from the configuration file.</p><p>If the C<span class="the_R">R</span>NRSTN Suite :: has been configured to connect to the MySQL database through more than one username, the <a href="classes/mysqli_connection_manager/returnconnection/" target="_self">returnConnection()</a> method needs to be invoked with 'host', 'database' and 'username' to ensure that the correct profile is chosen. Otherwise, if username is left out, the first matching database profile will be chosen from the configuration file...regardless of username.</p><p>It is recommended that you upgrade to the latest version of PHP and MySQL to take advantage of the latest gains in security and processing efficiency.</p><p>Currently tested on an ubuntu 4.2 server running PHP Version 5.2.6, Apache 2.2.11 and MySQL 5.0.75</p><h2>Parameters:</h2><h3>$host</h3><p>Can be either a host name or an IP address. Passing the NULL value or the string "localhost" to this parameter, the local host is assumed. When possible, pipes will be used instead of the TCP/IP protocol.<br />
<br />
Prepending host by p: opens a persistent connection. mysqli_change_user() is automatically called on connections opened from the connection pool.</p><h3>$db</h3><p>The database to be used when performing queries.</p><h3>$un</h3><p>The MySQL user name.</p><h3>$port</h3><p>Specifies the port number to attempt to connect to the MySQL server.</p><h3>$pwd</h3><p>The MySQL user password.</p><p>Last upated: 2017-04-11 02:27:21</p></div>