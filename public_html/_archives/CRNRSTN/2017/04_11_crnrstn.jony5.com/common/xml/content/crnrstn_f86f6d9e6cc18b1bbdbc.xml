<?xml version="1.0" encoding="iso-8859-1"?><crnrstn_pagecontent><crnrstn_element><crnrstn_contenttype>m</crnrstn_contenttype><crnrstn_title uri="documentation/classes/mysqli_conn_manager/processquery/">processQuery()</crnrstn_title><crnrstn_description>When sending data to or requesting data from a MySQL database, <a href="../../../classes/mysqli_conn_manager/processquery/" target="_self">processQuery()</a> receives a MySQLi database connection handle, the query and an optional result mode as parameters and processes the transaction...returning the result.<br />
<br />
The functionality of <a href="../../../classes/mysqli_conn_manager/processquery/" target="_self">processQuery()</a> stands directly on top of the native $mysqli->query(). For additional information about the behaviour of the $mysqli->query() method, please see the PHP.net documentation.</crnrstn_description><crnrstn_invokingclass>mysqli_conn_manager ::</crnrstn_invokingclass><crnrstn_methoddefine>processQuery($mysqli, $query, $resultMode=NULL)</crnrstn_methoddefine><crnrstn_returnedvalue>Returns FALSE on failure. For successful SELECT, SHOW, DESCRIBE or EXPLAIN queries processQuery()...which stands on top of mysqli_query()...will return a mysqli_result object. For other successful queries processQuery() will return TRUE.</crnrstn_returnedvalue><crnrstn_techspecscontent><crnrstn_techspec>It is recommended that you upgrade to the latest version of PHP to take advantage of the latest gains in security and processing efficiency.</crnrstn_techspec><crnrstn_techspec>Currently tested on an ubuntu 4.2 server running PHP Version 5.2.6, Apache 2.2.11 and MySQL 5.0.75</crnrstn_techspec><crnrstn_techspec>For non-DML queries (not INSERT, UPDATE or DELETE), this function is similar to calling mysqli_real_query() followed by either mysqli_use_result() or mysqli_store_result().</crnrstn_techspec><crnrstn_techspec>In the case where you pass a statement to mysqli_query() that is longer than max_allowed_packet of the server, the returned error codes are different depending on whether you are using MySQL Native Driver (mysqlnd) or MySQL Client Library (libmysqlclient). The behavior is as follows:<blockquote><strong>mysqlnd on Linux</strong> returns an error code of 1153. The error message means "got a packet bigger than max_allowed_packet bytes". <strong>mysqlnd on Windows</strong> returns an error code 2006. This error message means "server has gone away". <strong>libmysqlclient on all platforms</strong> returns an error code 2006. This error message means "server has gone away".</blockquote></crnrstn_techspec><crnrstn_techspec>For data sanitization, always escape user generated content before sending to the database. Please see the documentation on PHP.net concerning $mysqli->real_escape_string() for more information.</crnrstn_techspec></crnrstn_techspecscontent><crnrstn_parameterscontent><crnrstn_parameter><crnrstn_paramname>$resultMode</crnrstn_paramname><crnrstn_paramrequired>0</crnrstn_paramrequired><crnrstn_paramdefinition>Either the constant <strong>MYSQLI_USE_RESULT</strong> or <strong>MYSQLI_STORE_RESULT</strong> depending on the desired behaviour. By default, <strong>MYSQLI_STORE_RESULT</strong> is used.<br />
<br />
If you use <strong>MYSQLI_USE_RESULT</strong> all subsequent calls will return error Commands out of sync unless you call mysqli_free_result()<br />
<br />
With <strong>MYSQLI_ASYNC</strong> (available with mysqlnd), it is possible to perform query asynchronously. mysqli_poll() is then used to get results from such queries.</crnrstn_paramdefinition></crnrstn_parameter><crnrstn_parameter><crnrstn_paramname>$mysqli</crnrstn_paramname><crnrstn_paramrequired>1</crnrstn_paramrequired><crnrstn_paramdefinition>The MySQLi database connection handle that was returned by returnConnection()</crnrstn_paramdefinition></crnrstn_parameter><crnrstn_parameter><crnrstn_paramname>$query</crnrstn_paramname><crnrstn_paramrequired>1</crnrstn_paramrequired><crnrstn_paramdefinition>The query string.<br />
<br />
Data inside the query should be properly escaped.<br />
For example:  $funkyName = $mysqli->real_escape_string($funkyName);</crnrstn_paramdefinition></crnrstn_parameter></crnrstn_parameterscontent><crnrstn_examplescontent><crnrstn_example uri="http://crnrstn.jony5.com/common/html/examples/crnrstn_8982b8d271b99d6eff55.html">8982b8d271b99d6eff55</crnrstn_example></crnrstn_examplescontent></crnrstn_element><meta_datecreated>2017-04-11 02:26:52</meta_datecreated></crnrstn_pagecontent>