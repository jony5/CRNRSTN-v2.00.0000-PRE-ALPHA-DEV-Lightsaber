<?xml version="1.0" encoding="iso-8859-1"?><crnrstn_pagecontent><crnrstn_element><crnrstn_contenttype>m</crnrstn_contenttype><crnrstn_title uri="documentation/classes/cookie_manager/addrawcookie/">addRawCookie()</crnrstn_title><crnrstn_description>The <a href="../../../classes/cookie_manager/addrawcookie/" target="_self">addRawCookie()</a> method sits directly on top of PHP's native setrawcookie() method. Therefore the results of this method are identical to that of setrawcookie(). For additional information about the performance of <a href="../../../classes/cookie_manager/addrawcookie/" target="_self">addRawCookie()</a>, please see the php documentation for setrawcookie().<br />
<br />
If the C<span class="the_R">R</span>NRSTN Suite :: has been initialized via <a href="../../../classes/crnrstn/initcookieencryption/" target="_self">initCookieEncryption()</a> to apply an encryption layer to the cookie management process, there are special methods for encryption that must be used. See examples and documentation on the following: <a href="../../../classes/cookie_manager/addencryptedcookie/" target="_self">addEncryptedCookie()</a>, <a href="../../../classes/cookie_manager/getencryptedcookie/" target="_self">getEncryptedCookie()</a> and <a href="../../../classes/cookie_manager/deleteencryptedcookie/" target="_self">deleteEncryptedCookie()</a>.</crnrstn_description><crnrstn_invokingclass>cookie_manager ::</crnrstn_invokingclass><crnrstn_methoddefine>addRawCookie($name,$value,$expire,$path,$domain,$secure,$httponly)</crnrstn_methoddefine><crnrstn_returnedvalue>TRUE of FALSE</crnrstn_returnedvalue><crnrstn_techspecscontent><crnrstn_techspec>The method addRawCookie() is not supported by PHP 5.</crnrstn_techspec><crnrstn_techspec>Cookies are part of the HTTP header, so <a href="../../../classes/cookie_manager/addrawcookie/" target="_self">addRawCookie()</a> must be called before any output is sent to the browser.</crnrstn_techspec><crnrstn_techspec>The <a href="../../../classes/cookie_manager/addrawcookie/" target="_self">addRawCookie()</a> method sits directly on top of PHP's native setrawcookie() method.</crnrstn_techspec><crnrstn_techspec>It is recommended that you upgrade to the latest version of PHP to take advantage of the latests gains in security and processing efficiency.</crnrstn_techspec></crnrstn_techspecscontent><crnrstn_parameterscontent><crnrstn_parameter><crnrstn_paramname>$domain</crnrstn_paramname><crnrstn_paramrequired>0</crnrstn_paramrequired><crnrstn_paramdefinition>The domain that the cookie is available to. Setting the domain to 'www.example.com' will make the cookie available in the www subdomain and higher subdomains. Cookies available to a lower domain, such as 'example.com' will be available to higher subdomains, such as 'www.example.com'. Older browsers still implementing the deprecated RFC 2109 may require a leading . to match all subdomains.<br />
<br />
Please see php.net for additional information.</crnrstn_paramdefinition></crnrstn_parameter><crnrstn_parameter><crnrstn_paramname>$secure</crnrstn_paramname><crnrstn_paramrequired>0</crnrstn_paramrequired><crnrstn_paramdefinition>The path on the server in which the cookie will be available on. If set to '/', the cookie will be available within the entire domain. If set to '/foo/', the cookie will only be available within the /foo/ directory and all sub-directories such as /foo/bar/ of domain. The default value is the current directory that the cookie is being set in.<br />
<br />
Please see php.net for additional information.</crnrstn_paramdefinition></crnrstn_parameter><crnrstn_parameter><crnrstn_paramname>$httponly</crnrstn_paramname><crnrstn_paramrequired>0</crnrstn_paramrequired><crnrstn_paramdefinition>When TRUE the cookie will be made accessible only through the HTTP protocol. This means that the cookie won't be accessible by scripting languages, such as JavaScript. It has been suggested that this setting can effectively help to reduce identity theft through XSS attacks (although it is not supported by all browsers), but that claim is often disputed. Added in PHP 5.2.0. TRUE or FALSE<br />
<br />
Please see php.net for additional information.</crnrstn_paramdefinition></crnrstn_parameter><crnrstn_parameter><crnrstn_paramname>$name</crnrstn_paramname><crnrstn_paramrequired>1</crnrstn_paramrequired><crnrstn_paramdefinition>The name of the cookie. <br />
<br />
Please see php.net for additional information.</crnrstn_paramdefinition></crnrstn_parameter><crnrstn_parameter><crnrstn_paramname>$value</crnrstn_paramname><crnrstn_paramrequired>0</crnrstn_paramrequired><crnrstn_paramdefinition>The value of the cookie. This value is stored on the clients computer; do not store sensitive information. <br />
<br />
Please see php.net for additional information.</crnrstn_paramdefinition></crnrstn_parameter><crnrstn_parameter><crnrstn_paramname>$expire</crnrstn_paramname><crnrstn_paramrequired>0</crnrstn_paramrequired><crnrstn_paramdefinition>The time the cookie expires. This is a Unix timestamp so is in number of seconds since the epoch. In other words, you'll most likely set this with the time() function plus the number of seconds before you want it to expire. Or you might use mktime(). time()+60*60*24*30 will set the cookie to expire in 30 days. If set to 0, or omitted, the cookie will expire at the end of the session (when the browser closes).<br />
<br />
Please see php.net for additional information.</crnrstn_paramdefinition></crnrstn_parameter><crnrstn_parameter><crnrstn_paramname>$path</crnrstn_paramname><crnrstn_paramrequired>0</crnrstn_paramrequired><crnrstn_paramdefinition>The path on the server in which the cookie will be available on. If set to '/', the cookie will be available within the entire domain. If set to '/foo/', the cookie will only be available within the /foo/ directory and all sub-directories such as /foo/bar/ of domain. The default value is the current directory that the cookie is being set in.<br />
<br />
Please see php.net for additional information.</crnrstn_paramdefinition></crnrstn_parameter></crnrstn_parameterscontent><crnrstn_examplescontent><crnrstn_example uri="http://crnrstn.jony5.com/common/html/examples/crnrstn_8e7115c15fe0c70427c6.html">8e7115c15fe0c70427c6</crnrstn_example><crnrstn_example uri="http://crnrstn.jony5.com/common/html/examples/crnrstn_adf23965f24b32c82bad.html">adf23965f24b32c82bad</crnrstn_example></crnrstn_examplescontent></crnrstn_element><meta_datecreated>2017-04-11 02:26:52</meta_datecreated></crnrstn_pagecontent>