<?xml version="1.0" encoding="iso-8859-1"?><crnrstn_pagecontent><crnrstn_element><crnrstn_contenttype>m</crnrstn_contenttype><crnrstn_title uri="classes/crdocumentation/nrstn/initlogging">initLogging()</crnrstn_title><crnrstn_description>If the C<span class="the_R">R</span>NRSTN Suite :: has difficulty detecting the running environment from the parameters that have been provided in the configuration file, it will fire a notification with that information. Using its own built in error notification class, crnrstn_logging ::, this environmental detection notification and many other event worthy use cases have their state and situation communicated.<br />
<br />
A developer can also leverage this notification functionality to flag particular situations within their own web application. Through <a href="../../../classes/crnrstn/initlogging/" target="_blank">initLogging()</a>..by specifying how each environment should handle notices that are passed through the crnrstn_logging() class, you can seamlessly tie this functionality into existing network state monitoring. So, for example, you can configure the locally hosted application to output notices to screen, and the production environment can be configured to send all notices to the servers' default error log location. You can also customize the logging class to interface C<span class="the_R">R</span>NRSTN and your web application with a third party platform such as <a href="http://www.splunk.com/" target="_blank">Splunk</a>.<br />
<br />
Out of the box, C<span class="the_R">R</span>NRSTN comes configured with four (4) notification modes. Of the available modes, choose between:<br />
<ul><li><b><em>DEFAULT</em></b>: Send notice through environments' standard/default error notification handler (in PHP, calling the native error_log() method),</li><li><b><em>SCREEN</em></b>: Output notice directly to screen through PHP native print(),</li> <li><b><em>FILE</em></b>: Write notice to custom file (/path/filename should be provided in <a href="../../../classes/crnrstn/initlogging/" target="_blank">initlogging ()</a> $endPointDetails parameter)</li><li><b><em>EMAIL</em></b>: Send notice to comma delimited list of email addresses (email(s) provided in <a href="../../../classes/crnrstn/initlogging/" target="_blank">initlogging ()</a> $endPointDetails parameter).</li></ul><br />
You can strategically leverage the functionality of the C<span class="the_R">R</span>NRSTN Suite :: logging class object within your web application wherever you need error/state logging by instantiating the C<span class="the_R">R</span>NRSTN  :: Logging class object and invoking its' <a href="../../../classes/logging/capturenotice/" target="_self">captureNotice()</a> method.</crnrstn_description><crnrstn_invokingclass>crnrstn ::</crnrstn_invokingclass><crnrstn_methoddefine>initLogging($envKey, $loggingMode, $endPointDetails)</crnrstn_methoddefine><crnrstn_returnedvalue>TRUE</crnrstn_returnedvalue><crnrstn_techspecscontent><crnrstn_techspec>It is recommended that you upgrade to the latest version of PHP to take advantage of the latest gains in security and processing efficiency.</crnrstn_techspec><crnrstn_techspec>Currently tested on an ubuntu 4.2 server running PHP Version 5.2.6 and Apache 2.2.11</crnrstn_techspec></crnrstn_techspecscontent><crnrstn_parameterscontent><crnrstn_parameter><crnrstn_paramname>$envKey</crnrstn_paramname><crnrstn_paramrequired>1</crnrstn_paramrequired><crnrstn_paramdefinition>A user-defined custom string identifying a specific hosting environment or server profile. E.g. "LOCALHOST_MY_OLD_MAC_TOWER", "LOCALHOST_PC" or "PROD_01".</crnrstn_paramdefinition></crnrstn_parameter><crnrstn_parameter><crnrstn_paramname>$loggingMode</crnrstn_paramname><crnrstn_paramrequired>1</crnrstn_paramrequired><crnrstn_paramdefinition>Choose between DEFAULT, SCREEN, FILE and EMAIL to specify logging behavior.</crnrstn_paramdefinition></crnrstn_parameter><crnrstn_parameter><crnrstn_paramname>$endPointDetails</crnrstn_paramname><crnrstn_paramrequired>1</crnrstn_paramrequired><crnrstn_paramdefinition>If selected "FILE" in $loggingMode, then $endPointDetails should store the path+filename for the custom file. If EMAIL is specified in $loggingMode, then $endPointDetails should hold a comma delimited list of emails to which the logging notices should be sent.</crnrstn_paramdefinition></crnrstn_parameter></crnrstn_parameterscontent><crnrstn_examplescontent><crnrstn_example uri="http://crnrstn.jony5.com/common/html/examples/crnrstn_15e293599ecf466b62a2.html">15e293599ecf466b62a2</crnrstn_example></crnrstn_examplescontent></crnrstn_element><meta_datecreated>2017-04-11 02:26:52</meta_datecreated></crnrstn_pagecontent>